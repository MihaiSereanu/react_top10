{"version":3,"sources":["components/Article.js","components/RedditHeadlines.js","components/WikiHeadlines.js","App.js","index.js"],"names":["Article","article","index","href","permalink","target","rel","title","RedditHeadlines","useState","articles","setArticles","subreddit","setSubreddit","useEffect","handleGetArticles","a","fetch","response","json","data","children","console","log","className","type","value","onChange","e","map","key","WikiHeadlines","wikiArticle","setwikiArticle","wikicategory","setWikiCategory","handleWiki","wiki","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAeeA,EAbC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,QAAqB,EAAZC,MAC3B,OACC,iCACC,uBACCC,KAAI,4BAAuBF,EAAQG,WACnCC,OAAO,SACPC,IAAI,uBACJ,4BAAKL,EAAQM,UCmCFC,EAzCS,WAAO,IAAD,EACGC,mBAAS,IADZ,mBACtBC,EADsB,KACZC,EADY,OAEKF,mBAAS,UAFd,mBAEtBG,EAFsB,KAEXC,EAFW,KAI7BC,qBAAU,WACTC,EAAkBH,KAChB,CAACA,IAEJ,IAAMG,EAAiB,uCAAG,WAAOH,GAAP,iBAAAI,EAAA,+EAEHC,MAAM,4BAAD,OACGL,EADH,kBAFF,cAEpBM,EAFoB,gBAKPA,EAASC,OALF,OAKpBC,EALoB,OAMxBT,EAAYS,EAAKA,KAAKC,UANE,yDAQxBC,QAAQC,IAAR,MARwB,6EAAH,sDAavB,OACC,oCACC,4BAAQC,UAAU,gBACjB,2BACCC,KAAK,OACLD,UAAU,QACVE,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAae,EAAEvB,OAAOqB,WAGzC,yBAAKF,UAAU,YACbd,GACAA,EAASmB,KAAI,SAAC5B,EAASC,GAAV,OACZ,kBAAC,EAAD,CAAS4B,IAAK5B,EAAOD,QAASA,EAAQmB,KAAMlB,MAAOA,UCY1C6B,EA9CO,WAAO,IAAD,EACWtB,mBAAS,IADpB,mBACpBuB,EADoB,KACPC,EADO,OAEaxB,mBAAS,WAFtB,mBAEpByB,EAFoB,KAENC,EAFM,KAI3BrB,qBAAU,WACTsB,EAAWF,KACT,CAACA,IAEJ,IAAME,EAAU,uCAAG,WAAOF,GAAP,iBAAAlB,EAAA,+EAEEC,MAAM,wEAAD,OACiDiB,IAHxD,cAEXG,EAFW,gBAKAA,EAAKlB,OALL,OAKbC,EALa,OAMjBa,EAAeb,EAAK,IACpBe,EAAgBf,EAAK,IAPJ,yDASjBE,QAAQC,IAAR,MATiB,6EAAH,sDAchB,OACC,oCACC,4BAAQC,UAAU,cACjB,2BACCC,KAAK,OACLD,UAAU,YACVE,MAAOQ,EACPP,SAAU,SAACC,GAAD,OAAOO,EAAgBP,EAAEvB,OAAOqB,WAG5C,yBAAKF,UAAU,YACbQ,GACAA,EAAYH,KAAI,SAAC5B,EAASC,GAAV,OACf,6BAAS4B,IAAK5B,GACb,uBAAGC,KAAI,wCAAmCF,IACzC,4BAAKA,WCrBEqC,MAff,WACE,OACE,yBAAKd,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,OACb,kBAAC,EAAD,UCPVe,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e8642599.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Article = ({ article, index }) => {\r\n\treturn (\r\n\t\t<article>\r\n\t\t\t<a\r\n\t\t\t\thref={`https://reddit.com${article.permalink}`}\r\n\t\t\t\ttarget='_blank'\r\n\t\t\t\trel='noopener noreferrer'>\r\n\t\t\t\t<h4>{article.title}</h4>\r\n\t\t\t</a>\r\n\t\t</article>\r\n\t);\r\n};\r\n\r\nexport default Article;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Article from \"./Article\";\r\n\r\nconst RedditHeadlines = () => {\r\n\tconst [articles, setArticles] = useState([]);\r\n\tconst [subreddit, setSubreddit] = useState(\"webdev\");\r\n\r\n\tuseEffect(() => {\r\n\t\thandleGetArticles(subreddit);\r\n\t}, [subreddit]);\r\n\r\n\tconst handleGetArticles = async (subreddit) => {\r\n\t\ttry {\r\n\t\t\tlet response = await fetch(\r\n\t\t\t\t`https://www.reddit.com/r/${subreddit}.json?limit=8`\r\n\t\t\t);\r\n\t\t\tlet data = await response.json();\r\n\t\t\tsetArticles(data.data.children);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header className='redditHeader'>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tclassName='input'\r\n\t\t\t\t\tvalue={subreddit}\r\n\t\t\t\t\tonChange={(e) => setSubreddit(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</header>\r\n\t\t\t<div className='articles'>\r\n\t\t\t\t{articles &&\r\n\t\t\t\t\tarticles.map((article, index) => (\r\n\t\t\t\t\t\t<Article key={index} article={article.data} index={index} />\r\n\t\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default RedditHeadlines;\r\n","import React, { useState, useEffect } from \"react\";\r\n// https://cors-anywhere.herokuapp.com not needed it turns out\r\n\r\nconst WikiHeadlines = () => {\r\n\tconst [wikiArticle, setwikiArticle] = useState([]);\r\n\tconst [wikicategory, setWikiCategory] = useState(\"rainbow\");\r\n\r\n\tuseEffect(() => {\r\n\t\thandleWiki(wikicategory);\r\n\t}, [wikicategory]);\r\n\r\n\tconst handleWiki = async (wikicategory) => {\r\n\t\ttry {\r\n\t\t\tconst wiki = await fetch(\r\n\t\t\t\t`https://en.wikipedia.org/w/api.php?origin=*&action=opensearch&search=${wikicategory}`\r\n\t\t\t);\r\n\t\t\tlet data = await wiki.json();\r\n\t\t\tsetwikiArticle(data[1]);\r\n\t\t\tsetWikiCategory(data[0]);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header className='wikiHeader'>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tclassName='inputWiki'\r\n\t\t\t\t\tvalue={wikicategory}\r\n\t\t\t\t\tonChange={(e) => setWikiCategory(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t</header>\r\n\t\t\t<div className='articles'>\r\n\t\t\t\t{wikiArticle &&\r\n\t\t\t\t\twikiArticle.map((article, index) => (\r\n\t\t\t\t\t\t<article key={index}>\r\n\t\t\t\t\t\t\t<a href={`https://en.wikipedia.org/wiki/${article}`}>\r\n\t\t\t\t\t\t\t\t<h3>{article}</h3>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</article>\r\n\t\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default WikiHeadlines;\r\n","import React from 'react';\nimport RedditHeadlines from './components/RedditHeadlines'\nimport WikiHeadlines from './components/WikiHeadlines';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"box\">\n          <WikiHeadlines />\n        </div>\n        <div className=\"box\">\n          <RedditHeadlines />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}